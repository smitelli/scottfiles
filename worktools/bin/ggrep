#!/usr/bin/env python3

import os
import subprocess
import sys
from pathlib import Path


try:
    ROOT = os.environ['SCOTTFILES_WORKTOOLS_GIT_ROOT']
except KeyError:
    search_path = Path.cwd()
    while True:
        testfile = search_path / '.worktools'
        if testfile.is_file():
            ROOT = str(search_path)
            break

        if search_path == search_path.parent:
            raise RuntimeError('No SCOTTFILES_WORKTOOLS_* or .worktools files')

        search_path = search_path.parent


def get_all_git_dirs(root):
    return subprocess.check_output([
        'find', str(root), '-maxdepth', '3', '-name', '.git', '-type', 'd'
    ]).decode().strip().split('\n')


def call_prefixed(command, cwd=None):
    proc = subprocess.Popen(command, cwd=cwd, stdout=subprocess.PIPE, stderr=sys.stderr)
    while proc.returncode is None:
        for output in proc.communicate():
            if not output:
                continue
            for line in output.decode(errors='replace').strip().split('\n'):
                print(f'{cwd}{os.sep}{line}')


def ggrep(top_dir, grep_args):
    for gd in get_all_git_dirs(top_dir):
        call_prefixed(
            ['git', '--no-pager', 'grep'] + grep_args,
            cwd=Path(gd).parent)


if __name__ == '__main__':
    ggrep(ROOT, sys.argv[1:])
